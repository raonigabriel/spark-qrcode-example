<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.waiamu.open</groupId>
	<artifactId>spark-qrcode-example</artifactId>
	<version>1.0.0</version>

	<name>spark-qrcode-example</name>
	<description>Spark Framework QrCode Example</description>
	<url>https://github.com/raonigabriel/spark-qrcode-example/README.md</url>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<developers>
		<developer>
			<id>raoni</id>
			<name>Raoni Gabriel</name>
			<timezone>-3</timezone>
			<organization>Waiamu</organization>
			<organizationUrl>http://www.waiamu.com</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>

	<dependencies>
		<dependency>
			<groupId>com.sparkjava</groupId>
			<artifactId>spark-core</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>3.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.21</version>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
			<version>2.3.2</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4.3</version>
				<configuration>
					<minimizeJar>true</minimizeJar>
					<transformers>
						<transformer
							implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
							<mainClass>com.waiamu.open.SparkQrCodeApp</mainClass>
						</transformer>
					</transformers>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/LICENSE.txt</exclude>
								<exclude>about.html</exclude>
								<exclude>jetty-dir.css</exclude>
								<exclude>META-INF/maven/**</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>			
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.11</version>
				<dependencies>
				<dependency>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
			        <version>1.1.7</version>
				</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>build-docker-image</id>
						<phase>deploy</phase>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<imageName>waiamu/spark-qrcode-example</imageName>
							<baseImage>java:8-jre-alpine</baseImage>
							<maintainer>Raoni Gabriel &lt;https://github.com/raonigabriel&gt;</maintainer>
							<exposes>
								<expose>8080</expose>
							</exposes>
							<forceTags>true</forceTags>
							<imageTags>
								<imageTag>${project.version}</imageTag>
							</imageTags>
							<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
							<resources>
								<resource>
									<targetPath>/</targetPath>
									<directory>${project.build.directory}</directory>
									<include>${project.build.finalName}.jar</include>
								</resource>
							</resources>
						</configuration>      
    				</execution>
    			</executions>
			</plugin>			
		</plugins>
	</build>

</project>